name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16.14.2
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: nr build

      - name: Archive production build
        run: tar -czf build.tar.gz .output ecosystem.config.js

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.tar.gz

  # TODO: Add more steps here, like "nr test" as you add the tooling for it

  deploy:
    needs: build # 仅在构建成功后运行
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # 仅在主分支上运行
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get artifact download URL
        id: get-artifact-url
        run: |
          RESPONSE=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "${{ github.api_url }}/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")
          echo "$RESPONSE"
          ARTIFACT_URL=$(echo $RESPONSE | python -c "import sys, json; print(next(item['archive_download_url'] for item in json.load(sys.stdin)['artifacts'] if item['name'] == 'build'))")
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> $GITHUB_ENV

      - name: Deploy to Server
        run: ssh -o "StrictHostKeyChecking=no" ubuntu@170.106.40.151 'bash -s' < deploy_script.sh ${{ steps.get-artifact-url.outputs.artifact_url }}
